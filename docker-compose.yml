
services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: condo
      POSTGRES_PASSWORD: condopass
      POSTGRES_DB: condominio
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./Scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U condo -d condominio"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth_service:
    build: ./Backend/auth_service
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user_service:
    build: ./Backend/user_service
    ports:
      - "8002:8002"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  unit_service:
    build: ./Backend/unit_service
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  reservation_service:
    build: ./Backend/reservation_service
    ports:
      - "8004:8004"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  visitor_service:
    build: ./Backend/visitor_service
    ports:
      - "8005:8005"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  maintenance_service:
    build: ./Backend/maintenance_service
    ports:
      - "8006:8006"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  reporting_service:
    build: ./Backend/reporting_service
    ports:
      - "8007:8007"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  tenant_service:
    build: ./Backend/tenant_service
    ports:
      - "8008:8008"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  budget_service:
    build: ./Backend/budget_service
    ports:
      - "8009:8009"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8009/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  events_service:
    build: ./Backend/events_service
    ports:
      - "8010:8010"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  meetings_service:
    build: ./Backend/meetings_service
    ports:
      - "8011:8011"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8011/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  minutes_service:
    build: ./Backend/minutes_service
    ports:
      - "8012:8012"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8012/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  employees_service:
    build: ./Backend/employees_service
    ports:
      - "8013:8013"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8013/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  documents_service:
    build: ./Backend/documents_service
    ports:
      - "8014:8014"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8014/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  assets_service:
    build: ./Backend/assets_service
    ports:
      - "8015:8015"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8015/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notices_service:
    build: ./Backend/notices_service
    ports:
      - "8016:8016"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8016/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  audit_service:
    build: ./Backend/audit_service
    ports:
      - "8017:8017"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8017/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  service_providers_service:
    build: ./Backend/service_providers_service
    ports:
      - "8018:8018"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8018/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  family_members_service:
    build: ./Backend/family_members_service
    ports:
      - "8019:8019"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8019/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notifications_service:
    build: ./Backend/notifications_service
    ports:
      - "8020:8020"
    environment:
      DATABASE_URL: postgresql://condo:condopass@db:5432/condominio
      SMTP_SERVER: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SMTP_USE_TLS: "true"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8020/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: nginx:alpine
    volumes:
      - ./Frontend:/usr/share/nginx/html:ro
      - ./Frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    depends_on:
      auth_service:
        condition: service_healthy
      user_service:
        condition: service_healthy

volumes:
  db_data:
